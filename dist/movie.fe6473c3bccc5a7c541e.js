(()=>{"use strict";var __webpack_modules__={773:()=>{eval("\r\n\r\nconst idMovie = window.location.search.slice(4);\r\nconst URLImg = 'https://image.tmdb.org/t/p/original';\r\nconst URLInfoMovie = `https://api.themoviedb.org/3/movie/${idMovie}?api_key=6e6736e6ab781fd3a1a7c3b7add7654b&language=en-US`;\r\nconst URLRelisData = `https://api.themoviedb.org/3/movie/${idMovie}/release_dates?api_key=6e6736e6ab781fd3a1a7c3b7add7654b`;\r\nconst URLMovieVideo = `https://api.themoviedb.org/3/movie/${idMovie}/videos?api_key=6e6736e6ab781fd3a1a7c3b7add7654b&language=en-US`;\r\n\r\nconst containerBanner = document.querySelector('.container-banner');\r\n\r\nconst renderBanner = (movieInfo, certification, movieWatch) => {\r\n  let year = movieInfo['release_date'].split('-')[0];\r\n  let linkVideo = '';\r\n\r\n  if (movieWatch !== undefined) {\r\n    linkVideo = `<a href=\"https://www.youtube.com/watch?v=${movieWatch.key}\" class=\"btn banner-control__play\" target=\"_blank\">Watch \r\n    ${movieWatch.type}</a>`;\r\n  }\r\n\r\n  return `<div class=\"banner\">\r\n            <h1 class=\"banner-title\">${movieInfo.title}</h1>\r\n            <div class=\"banner-info\"> \r\n              <span class=\"banner-info_year\">${year}</span>\r\n              <span class=\"banner-info_age\">${certification}</span>\r\n              <span class=\"banner-info_time\">${Math.floor(\r\n                movieInfo.runtime / 60\r\n              )}h ${movieInfo.runtime % 60}min</span>\r\n              <span class=\"banner-info_rating rating\">${\r\n                movieInfo['vote_average']\r\n              }</span>\r\n            </div>\r\n            <p class=\"banner-text\">${movieInfo.overview}</p>\r\n            <div class=\"banner-control\"> \r\n              ${linkVideo}\r\n            </div>\r\n          </div>\r\n          <div class=\"container-banner_image\">\r\n            <img class=\"container-banner_image\" src=\"${\r\n              URLImg + movieInfo['backdrop_path']\r\n            }\" alt=\"${movieInfo.title}\">\r\n          </div>`;\r\n};\r\n\r\nconst requestTMD = (url) => {\r\n  let request = new Promise((resolve, reject) => {\r\n    fetch(url).then((data) => {\r\n      resolve(data.text());\r\n    });\r\n  });\r\n  return request;\r\n};\r\n\r\nconst findRelisData = (el) => {\r\n  let relisData = { release_dates: [{ certification: 'R' }] };\r\n  let certification;\r\n  el = el.results.find((item) => item['iso_3166_1'] === 'US') || relisData;\r\n  // el = el['release_dates'] || certification;\r\n  for (const item of el['release_dates']) {\r\n    if (item['certification'] !== '') {\r\n      certification = item['certification'];\r\n      break;\r\n    }\r\n  }\r\n  // return el.results.find((item) => item['iso_3166_1'] === 'US')[\r\n  //   'release_dates'\r\n  // ][0];\r\n  return certification;\r\n};\r\n\r\nlet allInfoMovie = requestTMD(URLInfoMovie);\r\nlet reliseData = requestTMD(URLRelisData);\r\nlet movieVideo = requestTMD(URLMovieVideo);\r\n\r\nPromise.all([allInfoMovie, reliseData, movieVideo]).then((responses) => {\r\n  let responsesJSON = responses.map((el) => JSON.parse(el));\r\n  containerBanner.insertAdjacentHTML(\r\n    'beforeend',\r\n    renderBanner(\r\n      responsesJSON[0],\r\n      findRelisData(responsesJSON[1]),\r\n      responsesJSON[2].results[0]\r\n    )\r\n  );\r\n});\r\n\n\n//# sourceURL=webpack:///./js/movie.js?")}},__webpack_exports__={};__webpack_modules__[773]()})();